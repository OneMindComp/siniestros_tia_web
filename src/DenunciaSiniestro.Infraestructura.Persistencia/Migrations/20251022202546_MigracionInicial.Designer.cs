// <auto-generated />
using System;
using DenunciaSiniestro.Infraestructura.Persistencia.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DenunciaSiniestro.Infraestructura.Persistencia.Migrations
{
    [DbContext(typeof(DenuncioDbContext))]
    [Migration("20251022202546_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.ConfiguracionFormulario", b =>
                {
                    b.Property<int>("IdConfiguracion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdConfiguracion");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("EstructuraJson")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("EstructuraJson");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<int>("IdTipoDenuncio")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoDenuncio");

                    b.Property<int>("Version")
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("IdConfiguracion");

                    b.HasIndex("IdTipoDenuncio", "Activo");

                    b.HasIndex("IdTipoDenuncio", "Version")
                        .IsUnique();

                    b.ToTable("ConfiguracionFormulario", (string)null);

                    b.HasData(
                        new
                        {
                            IdConfiguracion = 1,
                            Activo = true,
                            EstructuraJson = "{\"campos\":[{\"id\":\"fechaHora\",\"tipo\":\"datetime\",\"etiqueta\":\"Fecha y hora del accidente\",\"requerido\":true},{\"id\":\"lugar\",\"tipo\":\"text\",\"etiqueta\":\"Lugar del accidente\",\"requerido\":true,\"placeholder\":\"Dirección exacta\"},{\"id\":\"descripcion\",\"tipo\":\"textarea\",\"etiqueta\":\"Descripción del accidente\",\"requerido\":true,\"maxLength\":500},{\"id\":\"huboDaniosPersonales\",\"tipo\":\"boolean\",\"etiqueta\":\"¿Hubo daños personales?\",\"requerido\":true},{\"id\":\"vehiculosInvolucrados\",\"tipo\":\"number\",\"etiqueta\":\"Número de vehículos involucrados\",\"requerido\":true,\"min\":1}]}",
                            FechaCreacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaModificacion = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdTipoDenuncio = 1,
                            Version = 1
                        });
                });

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.Denuncio", b =>
                {
                    b.Property<int>("IdDenuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDenuncio");

                    b.Property<string>("DatosBasicos")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("DatosBasicos");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("pendiente")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaActualizacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaDenuncio")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaDenuncio");

                    b.Property<int>("IdConfiguracion")
                        .HasColumnType("int")
                        .HasColumnName("IdConfiguracion");

                    b.Property<int>("IdTipoDenuncio")
                        .HasColumnType("int")
                        .HasColumnName("IdTipoDenuncio");

                    b.Property<string>("NombreDenunciante")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NombreDenunciante");

                    b.Property<string>("NumeroSiniestro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NumeroSiniestro");

                    b.Property<string>("RespuestasFormulario")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("RespuestasFormulario");

                    b.Property<string>("TelefonoDenunciante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TelefonoDenunciante");

                    b.HasKey("IdDenuncio");

                    b.HasIndex("Estado");

                    b.HasIndex("FechaDenuncio");

                    b.HasIndex("IdConfiguracion");

                    b.HasIndex("NumeroSiniestro")
                        .IsUnique();

                    b.HasIndex("IdTipoDenuncio", "Estado");

                    b.ToTable("Denuncio", (string)null);

                    b.HasData(
                        new
                        {
                            IdDenuncio = 1,
                            DatosBasicos = "{\"email\":\"juan.perez@email.com\",\"direccion\":\"Av. 6 de Agosto #1234, La Paz\",\"ci\":\"1234567 LP\"}",
                            Estado = "pendiente",
                            FechaActualizacion = new DateTime(2024, 9, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            FechaCreacion = new DateTime(2024, 9, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            FechaDenuncio = new DateTime(2024, 9, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            IdConfiguracion = 1,
                            IdTipoDenuncio = 1,
                            NombreDenunciante = "Juan Carlos Pérez García",
                            NumeroSiniestro = "SIN-2024-000001",
                            RespuestasFormulario = "{\"fechaHora\":\"2024-09-15T14:30:00\",\"lugar\":\"Cruce Av. Arce y Calle 20 de Octubre\",\"descripcion\":\"Colisión en intersección, el otro vehículo no respetó el semáforo en rojo\",\"huboDaniosPersonales\":false,\"vehiculosInvolucrados\":2}",
                            TelefonoDenunciante = "+591-70123456"
                        });
                });

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.TipoDenuncio", b =>
                {
                    b.Property<int>("IdTipoDenuncio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdTipoDenuncio");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Descripcion");

                    b.Property<string>("IconoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("IconoUrl");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("UrlPath");

                    b.HasKey("IdTipoDenuncio");

                    b.HasIndex("Activo");

                    b.HasIndex("UrlPath")
                        .IsUnique();

                    b.ToTable("TipoDenuncio", (string)null);

                    b.HasData(
                        new
                        {
                            IdTipoDenuncio = 1,
                            Activo = false,
                            Descripcion = "",
                            IconoUrl = "",
                            Nombre = "Accidente de Tránsito",
                            UrlPath = ""
                        });
                });

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.ConfiguracionFormulario", b =>
                {
                    b.HasOne("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.TipoDenuncio", "TipoDenuncio")
                        .WithMany("ConfiguracionesFormulario")
                        .HasForeignKey("IdTipoDenuncio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoDenuncio");
                });

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.Denuncio", b =>
                {
                    b.HasOne("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.ConfiguracionFormulario", "ConfiguracionFormulario")
                        .WithMany("Denuncios")
                        .HasForeignKey("IdConfiguracion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.TipoDenuncio", "TipoDenuncio")
                        .WithMany("Denuncios")
                        .HasForeignKey("IdTipoDenuncio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConfiguracionFormulario");

                    b.Navigation("TipoDenuncio");
                });

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.ConfiguracionFormulario", b =>
                {
                    b.Navigation("Denuncios");
                });

            modelBuilder.Entity("DenunciaSiniestro.Infraestructura.Persistencia.Modelo.TipoDenuncio", b =>
                {
                    b.Navigation("ConfiguracionesFormulario");

                    b.Navigation("Denuncios");
                });
#pragma warning restore 612, 618
        }
    }
}
