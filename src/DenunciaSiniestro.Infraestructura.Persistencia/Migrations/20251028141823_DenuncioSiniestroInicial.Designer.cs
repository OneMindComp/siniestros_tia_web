// <auto-generated />
using System;
using DenunciaSiniestro.Infraestructura.Persistencia.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DenunciaSiniestro.Infraestructura.Persistencia.Migrations
{
    [DbContext(typeof(DenuncioDbContext))]
    [Migration("20251028141823_DenuncioSiniestroInicial")]
    partial class DenuncioSiniestroInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.ConfiguracionFormulario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("EstructuraJson")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("EstructuraJson");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaModificacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<long>("IdTipoDenuncio")
                        .HasColumnType("bigint")
                        .HasColumnName("IdTipoDenuncio");

                    b.Property<int>("Version")
                        .HasColumnType("int")
                        .HasColumnName("Version");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDenuncio", "Activo");

                    b.HasIndex("IdTipoDenuncio", "Version")
                        .IsUnique();

                    b.ToTable("ConfiguracionFormulario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Activo = true,
                            EstructuraJson = "{\"Secciones\":[{\"Campos\":[{\"Tipo\":0,\"Nombre\":\"NumeroPoliza\",\"Requerido\":true,\"Descripcion\":\"Numero de poliza\"},{\"Tipo\":0,\"Nombre\":\"Patente\",\"Requerido\":true,\"Descripcion\":\"Patente\"},{\"Tipo\":0,\"Nombre\":\"NumeroMotor\",\"Requerido\":true,\"Descripcion\":\"Numero de motor\"}],\"Nombre\":\"DatosVehiculo\",\"Descripcion\":\"Informacion del vehiculo involucrado en el accidente\"},{\"Campos\":[{\"Tipo\":0,\"Nombre\":\"Nombre\",\"Requerido\":true,\"Descripcion\":\"Nombre del denunciante\"},{\"Tipo\":0,\"Nombre\":\"Apellidos\",\"Requerido\":true,\"Descripcion\":\"Apellidos del denunciante\"},{\"Tipo\":1,\"Nombre\":\"Rut\",\"Requerido\":true,\"Descripcion\":\"Rut del denunciante\"},{\"Tipo\":0,\"Nombre\":\"Celular\",\"Requerido\":true,\"Descripcion\":\"Celular / Telefono del denunciante\"},{\"Tipo\":9,\"Nombre\":\"Mail\",\"Requerido\":true,\"Descripcion\":\"Correo electronico del denunciante\"}],\"Nombre\":\"DatosDenunciante\",\"Descripcion\":\"Informacion personal del denunciante\"},{\"Campos\":[{\"Tipo\":0,\"Nombre\":\"Nombre\",\"Requerido\":true,\"Descripcion\":\"Nombre del conductor\"},{\"Tipo\":1,\"Nombre\":\"Rut\",\"Requerido\":true,\"Descripcion\":\"Rut del conductor\"}],\"Nombre\":\"DatosConductor\",\"Descripcion\":\"Informacion sobre el conductor involucrado\"},{\"Campos\":[{\"Tipo\":0,\"Nombre\":\"Nombre\",\"Requerido\":true,\"Descripcion\":\"Nombre del lesionado\"},{\"Tipo\":1,\"Nombre\":\"Rut\",\"Requerido\":true,\"Descripcion\":\"Rut del lesionado\"},{\"Tipo\":0,\"Nombre\":\"Celular\",\"Requerido\":true,\"Descripcion\":\"Celular / Telefono del lesionado\"},{\"Tipo\":9,\"Nombre\":\"Mail\",\"Requerido\":true,\"Descripcion\":\"Correo electronico del lesionado\"}],\"Nombre\":\"DatosLesionado\",\"Descripcion\":\"Informacion sobre el lesionado en el accidente\"},{\"Campos\":[{\"Tipo\":2,\"Nombre\":\"Ubicacion\",\"Requerido\":true,\"Descripcion\":\"Ubicacion en la que se produjo el accidente\"},{\"Tipo\":3,\"Nombre\":\"Fecha\",\"Requerido\":true,\"Descripcion\":\"Fecha siniestro\"},{\"Tipo\":2,\"Nombre\":\"Relato\",\"Requerido\":true,\"Descripcion\":\"Relato del accidente\"},{\"Tipo\":4,\"Nombre\":\"NumeroPartePolicial\",\"Requerido\":true,\"Descripcion\":\"Numero Parte Policial\"},{\"Tipo\":9,\"Nombre\":\"recordType\",\"Opciones\":[{\"Etiqueta\":\"--Ninguno--\",\"Valor\":\"\"},{\"Etiqueta\":\"Caso General\",\"Valor\":\"012Uf0000003ixO\"},{\"Etiqueta\":\"Caso Glia\",\"Valor\":\"012Uf000003cYuz\"},{\"Etiqueta\":\"Caso Proteccion Patrimonial\",\"Valor\":\"012Uf000000JYHJ\"},{\"Etiqueta\":\"Caso Siniestro\",\"Valor\":\"0124T00000054Ym\"}],\"Requerido\":false,\"Descripcion\":\"Tipo de registro del caso\"}],\"Nombre\":\"DatosSiniestro\",\"Descripcion\":\"Informacion del siniestro reportado\"}]}",
                            FechaCreacion = new DateTime(2025, 10, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            FechaModificacion = new DateTime(2025, 10, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            IdTipoDenuncio = 1L,
                            Version = 1
                        });
                });

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.Denuncio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<string>("DatosBasicos")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("DatosBasicos");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("pendiente")
                        .HasColumnName("Estado");

                    b.Property<DateTime>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaActualizacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FechaCreacion")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("FechaDenuncio")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaDenuncio");

                    b.Property<long>("IdConfiguracion")
                        .HasColumnType("bigint")
                        .HasColumnName("IdConfiguracion");

                    b.Property<long>("IdTipoDenuncio")
                        .HasColumnType("bigint")
                        .HasColumnName("IdTipoDenuncio");

                    b.Property<string>("NombreDenunciante")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NombreDenunciante");

                    b.Property<string>("NumeroSeguimiento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NumeroSeguimiento");

                    b.Property<string>("NumeroSiniestro")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NumeroSiniestro");

                    b.Property<string>("RespuestasFormulario")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("RespuestasFormulario");

                    b.Property<string>("TelefonoDenunciante")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("TelefonoDenunciante");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("FechaDenuncio");

                    b.HasIndex("IdConfiguracion");

                    b.HasIndex("NumeroSeguimiento")
                        .IsUnique();

                    b.HasIndex("NumeroSiniestro")
                        .IsUnique();

                    b.HasIndex("IdTipoDenuncio", "Estado");

                    b.ToTable("Denuncio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DatosBasicos = "{}",
                            Estado = "Ingresado",
                            FechaActualizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaCreacion = new DateTime(2024, 9, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            FechaDenuncio = new DateTime(2024, 9, 15, 14, 30, 0, 0, DateTimeKind.Utc),
                            IdConfiguracion = 1L,
                            IdTipoDenuncio = 1L,
                            NombreDenunciante = "Juan Carlos Perez Garcia",
                            NumeroSeguimiento = "SEED-2024-0001",
                            RespuestasFormulario = "{\"DatosVehiculo\":{\"NumeroPoliza\":\"123456\",\"Patente\":\"ABC123\",\"NumeroMotor\":\"MOT123\"}}",
                            TelefonoDenunciante = "+591-70123456"
                        });
                });

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.TipoDenuncio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    b.Property<bool>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("Activo");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Descripcion");

                    b.Property<string>("IconoUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("IconoUrl");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre");

                    b.Property<string>("UrlPath")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("UrlPath");

                    b.HasKey("Id");

                    b.HasIndex("Activo");

                    b.HasIndex("UrlPath")
                        .IsUnique();

                    b.ToTable("TipoDenuncio", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Activo = true,
                            Descripcion = "Denuncias relacionadas con accidentes de transito SOAP.",
                            IconoUrl = "https://southbridgeseguros.cl/media/wysiwyg/sb-seguros/soap_icon.png",
                            Nombre = "SOAP",
                            UrlPath = "accidente-transito"
                        });
                });

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.ConfiguracionFormulario", b =>
                {
                    b.HasOne("DenunciaSiniestro.Dominio.Entidades.TipoDenuncio", "TipoDenuncio")
                        .WithMany("ConfiguracionesFormulario")
                        .HasForeignKey("IdTipoDenuncio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoDenuncio");
                });

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.Denuncio", b =>
                {
                    b.HasOne("DenunciaSiniestro.Dominio.Entidades.ConfiguracionFormulario", "ConfiguracionFormulario")
                        .WithMany("Denuncios")
                        .HasForeignKey("IdConfiguracion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DenunciaSiniestro.Dominio.Entidades.TipoDenuncio", "TipoDenuncio")
                        .WithMany("Denuncios")
                        .HasForeignKey("IdTipoDenuncio")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConfiguracionFormulario");

                    b.Navigation("TipoDenuncio");
                });

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.ConfiguracionFormulario", b =>
                {
                    b.Navigation("Denuncios");
                });

            modelBuilder.Entity("DenunciaSiniestro.Dominio.Entidades.TipoDenuncio", b =>
                {
                    b.Navigation("ConfiguracionesFormulario");

                    b.Navigation("Denuncios");
                });
#pragma warning restore 612, 618
        }
    }
}
